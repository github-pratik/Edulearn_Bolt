import React, { useState, useEffect } from 'react';
import { Brain, Lightbulb, Target, HelpCircle, TrendingUp, Sparkles } from 'lucide-react';
import { generateVideoAnalysis, isOpenRouterAvailable } from '../../lib/integrations/openrouter';

interface VideoAnalysisPanelProps {
  videoTitle: string;
  videoDescription: string;
  subject: string;
  isVisible: boolean;
}

const VideoAnalysisPanel: React.FC<VideoAnalysisPanelProps> = ({
  videoTitle,
  videoDescription,
  subject,
  isVisible,
}) => {
  const [analysis, setAnalysis] = useState<string | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    if (isVisible && !analysis && isOpenRouterAvailable()) {
      generateAnalysis();
    }
  }, [isVisible, videoTitle, videoDescription, subject]);

  const generateAnalysis = async () => {
    setLoading(true);
    setError(null);

    try {
      const result = await generateVideoAnalysis(videoTitle, videoDescription, subject);
      
      if (result) {
        setAnalysis(result);
      } else {
        setError('Unable to generate analysis at this time.');
      }
    } catch (err) {
      console.error('Analysis generation failed:', err);
      setError('Failed to generate video analysis.');
    } finally {
      setLoading(false);
    }
  };

  if (!isVisible) return null;

  if (!isOpenRouterAvailable()) {
    return (
      <div className="glass-card p-6 border-l-4 border-yellow-400">
        <div className="flex items-center space-x-3 mb-4">
          <Brain size={24} className="text-yellow-500" />
          <h3 className="text-lg font-semibold text-neutral-800">AI Video Analysis</h3>
        </div>
        <p className="text-neutral-600">
          AI analysis is currently unavailable. Please configure the OpenRouter API key to enable this feature.
        </p>
      </div>
    );
  }

  return (
    <div className="glass-card p-6 border-l-4 border-purple-400">
      <div className="flex items-center space-x-3 mb-6">
        <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-xl flex items-center justify-center shadow-glass">
          <Brain size={20} className="text-white" />
        </div>
        <div>
          <h3 className="text-lg font-semibold text-neutral-800 flex items-center space-x-2">
            <span>AI Video Analysis</span>
            <Sparkles size={16} className="text-purple-500" />
          </h3>
          <p className="text-sm text-neutral-600">Powered by DeepSeek Chat V3</p>
        </div>
      </div>

      {loading && (
        <div className="space-y-4">
          <div className="flex items-center space-x-3">
            <div className="flex space-x-1">
              <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce"></div>
              <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
              <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
            </div>
            <span className="text-sm text-neutral-600">Analyzing video content...</span>
          </div>
          
          <div className="space-y-3">
            {[...Array(4)].map((_, i) => (
              <div key={i} className="h-4 bg-gradient-to-r from-neutral-200 to-neutral-300 rounded-lg shimmer"></div>
            ))}
          </div>
        </div>
      )}

      {error && (
        <div className="p-4 bg-red-50 border border-red-200 rounded-lg">
          <div className="flex items-center space-x-2">
            <HelpCircle size={16} className="text-red-600" />
            <span className="text-sm text-red-800">{error}</span>
          </div>
          <button
            onClick={generateAnalysis}
            className="mt-3 px-4 py-2 bg-red-600 text-white text-sm rounded-lg hover:bg-red-700 transition-colors"
          >
            Try Again
          </button>
        </div>
      )}

      {analysis && (
        <div className="space-y-4">
          <div className="prose prose-sm max-w-none">
            <div className="whitespace-pre-wrap text-neutral-700 leading-relaxed">
              {analysis}
            </div>
          </div>

          <div className="pt-4 border-t border-neutral-200">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-2 text-xs text-neutral-500">
                <Brain size={12} className="text-purple-500" />
                <span>Generated by DeepSeek Chat V3</span>
              </div>
              <button
                onClick={generateAnalysis}
                className="px-3 py-1 text-xs bg-purple-100 text-purple-700 rounded-lg hover:bg-purple-200 transition-colors"
              >
                Regenerate
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default VideoAnalysisPanel;